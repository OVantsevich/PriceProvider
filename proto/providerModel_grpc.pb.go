// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: proto/providerModel.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PriceProviderClient is the client API for PriceProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PriceProviderClient interface {
	GetCurrentPrices(ctx context.Context, in *GetPricesRequest, opts ...grpc.CallOption) (*GetPricesResponse, error)
}

type priceProviderClient struct {
	cc grpc.ClientConnInterface
}

func NewPriceProviderClient(cc grpc.ClientConnInterface) PriceProviderClient {
	return &priceProviderClient{cc}
}

func (c *priceProviderClient) GetCurrentPrices(ctx context.Context, in *GetPricesRequest, opts ...grpc.CallOption) (*GetPricesResponse, error) {
	out := new(GetPricesResponse)
	err := c.cc.Invoke(ctx, "/PriceProvider/GetCurrentPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PriceProviderServer is the server API for PriceProvider service.
// All implementations must embed UnimplementedPriceProviderServer
// for forward compatibility
type PriceProviderServer interface {
	GetCurrentPrices(context.Context, *GetPricesRequest) (*GetPricesResponse, error)
	mustEmbedUnimplementedPriceProviderServer()
}

// UnimplementedPriceProviderServer must be embedded to have forward compatible implementations.
type UnimplementedPriceProviderServer struct {
}

func (UnimplementedPriceProviderServer) GetCurrentPrices(context.Context, *GetPricesRequest) (*GetPricesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentPrices not implemented")
}
func (UnimplementedPriceProviderServer) mustEmbedUnimplementedPriceProviderServer() {}

// UnsafePriceProviderServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PriceProviderServer will
// result in compilation errors.
type UnsafePriceProviderServer interface {
	mustEmbedUnimplementedPriceProviderServer()
}

func RegisterPriceProviderServer(s grpc.ServiceRegistrar, srv PriceProviderServer) {
	s.RegisterService(&PriceProvider_ServiceDesc, srv)
}

func _PriceProvider_GetCurrentPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPricesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceProviderServer).GetCurrentPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PriceProvider/GetCurrentPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceProviderServer).GetCurrentPrices(ctx, req.(*GetPricesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PriceProvider_ServiceDesc is the grpc.ServiceDesc for PriceProvider service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PriceProvider_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "PriceProvider",
	HandlerType: (*PriceProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCurrentPrices",
			Handler:    _PriceProvider_GetCurrentPrices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/providerModel.proto",
}
